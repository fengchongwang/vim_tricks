Markdeep
 ‚úí
‚úí
DEMO | FEATURES | TEMPLATES | GET STARTED | EXAMPLES | ADVANCED | CREDITS | LICENSE
Markdeep is a technology for writing plain text documents that will look good in any web browser, whether local or remote. It supports diagrams, calendars, equations, and other features as extensions of Markdown syntax.

Markdeep is free and easy to use. It doesn't require a plugin or Internet connection. Your document never leaves your machine and there's nothing to install. Just start writing in your favorite text editor. You don't have to export, compile, or otherwise process your document. Here's an example of a text editor and a browser viewing the same file simultaneously:

Text Editor View
üììexample.md.html√ó
  File   Edit   Format   View   Help

Web Browser View
‚òêExample√ó+√ó
  ‚Üê   ‚Üí   ‚Üª

Markdeep is ideal for design documents, specifications, README files, code documentation, lab reports, and technical web pages. Because the source is plain text, Markdeep works well with software development toolchains.

Markdeep was created by Morgan McGuire at Casual Effects with inspiration from John Gruber's Markdown and Donald Knuth's and Leslie Lamport's LaTeX.

Style Features

(See the demo!)
Unique features:

Diagrams
Insert documents into one another
LaTeX equation typesetting and numbering
Table of contents
Document title and subtitle formatting
Schedules and calendars
Section numbering and references
Figure, listing, and table numbering and references
Smart quotes
Video
En dash, em dash, √ó, minus, and degrees
Attributes on links
Unindexed sections
Works in any browser by adding one line to the bottom of a text document
Fallback to ASCII in a browser if you have neither the local file nor Internet access
Optionally process server-side or offline with wkhtmltopdf
CSS stylesheets
Page breaks
Printing and PDF generation support
Maruku + github + Admonition + CommonMark Markdown features:
Tables
Paragraph formatting
Automatic e-mail address and URL linking
Nested, numbered and bulleted lists
Fenced code blocks
Links and reference links
Bold, italic, code, strikethrough
Hyperlinks
Attributes on images
Blockquotes
Citations
Footnotes and endnotes
Definition lists
Images
Doesn't italicize math with * or words containing underscores
Unicode
Admonitions (callout notes)
HTML passthrough
Quick-start Templates

starter.md.html	Default web template with monospace/"ASCII" fallback
latex.md.html	LaTeX article formatting with fast load (no flashing). Note that you can use LaTeX math in any Markdeep document. This template is for those who like LaTeX's default style as well.
dark.md.html	Black background with aggressive styling and fast load (no flashing)
apidoc.md.html	API documentation style (by Aras Pranckeviƒçius)
slides.md.html	Template for generating PDF slideshows
Get Started

To create a Markdeep document, just open any text editor and start writing. Paste the following at the bottom of your document as a single line. Then, save it as plain text with a filename with extension .md.html.

<!-- Markdeep: --><style class="fallback">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src="markdeep.min.js"></script><script src="https://casual-effects.com/markdeep/latest/markdeep.min.js"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility="visible")</script>
If you wish to use Unicode characters in your source document, you must put the following line at the top:

<meta charset="utf-8">
You can drag your document into a web browser or double click on it to see it with formatting. You can also read the document in a browser when you don't have an Internet connection. If you want to avoid losing formatting when offline, just keep markdeep.min.js in the same folder.

View the plain source of the feature demo to learn the formatting styles that you can use. Markdeep extends Markdown, and to quote John Gruber:

The overriding design goal for Markdown's formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it's been marked up with tags or formatting instructions.
To inspect the original text source for a Markdeep document in a browser, just add ?noformat to the end of its URL.

Editing Tips

Markdown Modes for Popular Editors

Visual Studio code provides built-in Markdown support
Visual Studio
Emacs
Vi
Sublime
Notepad++
Atom provides built-in Markdown support
For Markdeep + Markdown Emacs installation, save markdown-mode.el in ~/emacs.d/ and add the following lines to your ~/.emacs file:

;; Uncomment the following line on OS X
;; (add-to-list 'load-path (expand-file-name "~/.emacs.d"))

(autoload 'markdown-mode "markdown-mode" "Major mode for editing Markdown" t)
(add-to-list 'auto-mode-alist '("\\.md.html\\'" . markdown-mode)
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))
Diagram Tips

There are a lot of techniques that can make drawing diagrams in plain text easier. I just use Visual Studio or Emacs in overwrite mode, and do everything by hand. I find that much easier than installing or learning a new tool. Here are some basic editor tricks:

In most editors, pressing the insert key will enter overwrite mode, where you can type without inserting. If you're on a Macbook in Bootcamp, press fn + return for insert. Or, in Emacs, use M-x overwrite-mode to toggle overwriting.
In Visual Studio, hold down Alt while selecting to make a selection rectangle. This allows you to insert, type, and delete across multiple lines.
In Emacs, you can define a macro on the fly with C-x (, some key strokes, and then C-x ). Press C-x e to play back the macro, and keep repeating e to keep executing it. I use this to eliminate the manual work of repetitive actions, for example, adding a space on the left of an object and deleting one on its right to shift the object right.
Others prefer more sophisticated options:
Overwrite-mode, Artist-mode, or Picture-mode in Emacs. These are minor modes that you can toggle on top of your major (language) mode.
Vim DrawIt!
ASCIIFlow Infinity is a free web tool for drawing ASCII diagrams.
Org-mode is a major mode in Emacs for...everything. Markdeep diagrams are largely compatibile with its ditaa diagram syntax.
Asciio is a standalone tool.
JavE is a standalone diagram tool, but its syntax isn't entirely compatible with Markdeep.
The Unix tool groff has an interpreter for the Pic language, which can be used to generate diagrams from graphs,
graph-easy can convert Dot and other graph languages to ASCII.
Monodraw is an OS X Unicode art editor that can produce Markdeep diagrams, but you should avoid using non-ISO 8859-1 (Latin 1) characters, since they won't produce lines.
FIGlet will convert text to ASCII art banners. Some of its fonts are Markdeep compatible.
What about the "ASCII drawing characters," the DOS code page 437 and 850 characters? They're not widely supported in most modern monospace fonts (and thus editors), which are keyed to Unicode. Although Unicode has the same box drawing characters, they're now at different code points and not well supported by text-only tools (alas! I grew up with text-mode graphics and miss them).
Examples

Markdeep is used extensively within the technology industry and academia. Manuals, theses, and even whole books have been written in it. Here are some public examples by myself and my colleagues:

Syllabus
Lecture slides
Homework assignment
Game design document
Software library
Game report
Blog
Advanced Applications

The following features are experimental and may change at any time. See the release history for change information between versions.
URL Arguments

You can add the following arguments to any Markdeep document URL to alter how it is displayed. For example, http://foo.bar/index.md.html?export shows the HTML output.

noformat
Attempt to display the original source of the document. Due to web browser limitations, in some cases this will not be 100% accurate to the actual file source.
export
Make the displayed body HTML source code produced by Markdeep. This is useful for exporting a Markdeep document to HTML if you need to paste it into some context, such as an ePub book or Blog site, that does not allow scripts.
Options

Markdeep looks in the window.markdeepOptions object to determine its behavior. The legal options are:

mode
A String that can be:
'markdeep' - the default: process the document as Markdeep
'script' - do not modify the document
'html' - process the document as HTML with embedded Markdeep nodes
'doxygen' - process special tags in Doxygen documentation
lang
An Object describing the natural language to use for keywords such as Section and Figure. (If your language is already supported by Markdeep, it is much easier to set this via a <meta lang="..."> tag in the document.) Look at the value of the global variable FRENCH in the source code to see the structure of this Object.
tocStyle
A String specifying the layout style for the table of contents. Values are:
'auto' - Adjust based on the length of the document. (Default)
'none' - Do not show a table of contents
'short' - Show a short table of level-1 headers on a line across the top of the document
'medium' - Float a small-font full table of contents to the right of the abstract
'long' - Insert a full table of contents in normal font size as the first section after the abstract
hideEmptyWeekends
A Boolean specifying whether the calendar views from schedule lists should remove weekend days if there are no events on them. The default is true.
detectMath
A Boolean that defaults to true. If true, when LaTeX math surrounded by $...$, \(...\), or \begin{...}...\end{...} is encountered, the MathJax processor is automatically loaded from their CDN. Set to false if you don't use math notation, host MathJax locally and include it using a script tag yourself, or use an alternative math processor.
showLabels
A Boolean that defaults to false. Display all labels for Figures, Listings, and Tables, as well as URLs for images with captions, the document itself, and links. This is useful when printing proofs of book chapters.
sortScheduleLists
A Boolean that defaults to true. Sort schedules in order of increasing date, regardless of the order in which events appear in the source document.
captionAbove
A table mapping diagram, image, listing, and table to Booleans. Each defaults to false, meaning that captions appear below (after) the objects. Set values to true to move the captions above (before) the objects. Example: markdeepOptions.captionAbove.listing = true. In the Markdeep source document, listings must always appear after the object. This option only affects where they appear when the document is viewed.

Tables

You can use a markdown table generator to produce and edit the source for a table in Markdeep, since Markdeep is a superset of CommonMark markdown.


Markdeep to PDF or HTML

You can of course print Markdeep documents to PDF from your browser manually. To automate the process of generating PDF files from Markdeep, I recommend wkhtmltopdf, a free, open-source, cross-platform command-line utility. If you include Latex/Mathjax math or remote fonts, ensure that they are loaded before the actual print operation occurs by using a delay. For example:

wkhtmltopdf --dpi 600 --print-media-type --javascript-delay 10000 --no-stop-slow-scripts report.md.html report.pdf
(Due to a limitation of wkhtmltopdf, this doesn't work if you're hosting Markdeep locally.)
wkhtmltopdf has many options for controlling formatting. When batch processing reports, I often add the options --header-spacing 5 --default-header to print the name of the document and page numbers.

To force sections to begin new pages when printed or in a PDF, add the following to your Markdeep document:

<style>.md h1, .md .nonumberh1 {page-break-before:always}</style>
Under OS X, you can also run join.py to concatenate multiple Markdeep PDF chapters for a thesis or book with the single-line command:

"/System/Library/Automator/Combine PDF Pages.action/Contents/Resources/join.py" -o merged-file.pdf file1.pdf file2.pdf ...
For HTML export, see this guide that uses Firefox and another JavaScript file.


Markdeep in HTML Documents

By default, Markdeep passes HTML commands through to the browser. This is for HTML in a primarily Markdeep document. If you have a document that is instead primarily HTML and you want to use Markdeep within it, then load the script with the following code at the end of the document inside of the body tag:

<script>window.markdeepOptions = {mode: 'html'};</script> 
<script src="markdeep.min.js"></script>
This will process <markdeep> tags as Markdeep (which may include embedded diagrams enclosed in asterisks), <diagram> tags as Markdeep diagrams (which do not need enclosing asterisks), and leave any other content in the document unmodified as HTML.
You can also use <pre class="markdeep"> and <pre class="diagram"> tags.


Markdeep with Doxygen

Set an explicit footer in Doxyfile with:

HTML_FOOTER = footer.html
Include the following lines in the footer.html:
<script>window.markdeepOptions = {mode: 'doxygen'};</script> 
<script src="markdeep.min.js"></script>
Use <pre class="markdeep"> and <pre class="diagram"> tags in your documentation.

Javascript API

You can prevent Markdeep from autoformatting a document so that you can use it as a Javascript library by loading it as:

<script>window.markdeepOptions = {mode: 'script'};</script> 
<script src="markdeep.min.js"></script>
This allows you to then manually invoke diagram processing or full Markdeep processing from within your own Javascript programs. Markdeep exports the following members on window.markdeep:
function format(src, elementMode)

Converts a String or DOM Element containing Markdeep content into a String of HTML that is returned. The result does not include the Markdeep header (stylesheet and math library script tags) or footer (signature line). The input is not modified.

Optional argument elementMode defaults to true, which surpresses page titles and a table of contents. Set elementMode = false if processing a whole document at once. Section captions are unaffected by this argument.


function formatDiagram(str, alignment)

Converts a Markdeep diagram (without the surrounding asterisks) to a String containing SVG HTML that is returned.

alignment is an optional String value for the float attribute of the SVG node. It may be 'left', 'right', or undefined.


function stylesheet()

Returns the Markdeep default stylesheet used for short documents. Markdeep adds extra spacing around the title when formatting a large document. 

Code

Markdeep is open source, so you can directly download and modify the source: markdeep.js. Implementation suggestions and patches are welcome at morgan@casual-effects.com. I'm particularly interested in suggestions for ways to significantly reduce the (minified) script size further.

This was a small hobby project, so I don't provide technical support and can't add every feature requested. However, so far I've been able to fix all reported bugs within a few days and often add features if they are straightforward and well-specified. Fortunately, if I'm unable to add the change that you want, you can just make those changes yourself.

Origin and Credits

I created Markdeep because I was no longer willing to choose between design documents that looked good and those that worked well with programming tools. I liked what Markdown did on web servers, so I used that as a starting point and added more styling features and a way to directly view the documents client side in a browser.

HTML is "markup" that extends plain text with formatting. Unfortunately, the formatting tags often make original document source hard to read and write. This is slow and annoying, especially for those of us who use programming tools for document editing or want formatting in documentation files.

John Gruber invented Markdown to address HTML's editing problems. The name "markdown" conveys styling in the opposite direction of the "markup" tag syntax. Markdown beautifies text without explicit tags, based on common practices from ASCII e-mail and plain-text documents.

"Markdeep" is farther "down" from "markdown" on the autostyling and beautification path. Markdeep combines an easy-to-use and browser-friendly packaging with new unique features for diagrams. The code includes some of the best previous Javascript document formatting libraries and links to MathJax for equation typesetting.

Markdeep was created by Morgan McGuire. It extends the design and implementation work of:

John Gruber's original Markdown concept and specification
Ben Hollis' Maruku (aka "Github") Markdown dialect specification
Michel Fortin's Extra Markdown dialect specification
Ivan Sagalaev's highlight.js for syntax coloring
Contributors to the above open source projects
License

Markdeep is open source. You may use, extend, and redistribute Markdeep without charge under the terms of the BSD license:
      Copyright 2015-2017, Morgan McGuire
      All rights reserved.

      Redistribution and use in source and binary forms, with or without modification, 
      are permitted provided that the following conditions are met:

      1. Redistributions of source code must retain the above copyright notice, this
      list of conditions and the following disclaimer.

      2. Redistributions in binary form must reproduce the above copyright notice, this
      list of conditions and the following disclaimer in the documentation and/or other
      materials provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
      ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
      WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
      IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
      LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
      OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
      THE POSSIBILITY OF SUCH DAMAGE.
    
Markdeep includes highlight.js, so you are also bound by its BSD license:
      Copyright (c) 2006, Ivan Sagalaev
      All rights reserved.

      Redistribution and use in source and binary forms, with or without modification, are 
      permitted provided that the following conditions are met:
      
      * Redistributions of source code must retain the above copyright notice, this list of
      conditions and the following disclaimer.
      * Redistributions in binary form must reproduce the above copyright notice, this list 
      of conditions and the following disclaimer in the documentation and/or other materials
      provided with the distribution.
      * Neither the name of highlight.js nor the names of its contributors may be used to 
      endorse or promote products derived from this software without specific prior written 
      permission.
      
      THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR 
      IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
      MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL 
      THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
      EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
      SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
      HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
      SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    
Release History

Follow @CasualEffects on Twitter for notification of new incremental features and releases.

Old releases are archived as

https://casual-effects.com/markdeep/VERSION/markdeep.min.js
You can modify the Markdeep line at the bottom of a document to hardcode to a specific version instead of the default version of "latest".
You can report bugs to morgan@casual-effects.com by sending a Markdeep document and what you think is wrong about the way that it appears.

2018-01-TBD Version 1.00: TBD
Fixed use of (include here) with implicit email links.

2017-12-31 Version 0.23: Code
Tweaked the apidoc.css style.
Fixed top-level header formatting broken in the previous release.
Code blocks now use four-space tabs (instead of eight spaces).
Added syntax coloring for Go, Rust, R, Lua, TypeScript, and Swift code blocks.
Added support for back-to-back code blocks with no text between them.
Improved robustness of schedule list detection and removed warning messages from speculative parser.
Localized smart quotation marks to the same region as other keywords, following this spec.
Fixed email address detection for 2-letter domains with a patch by Michael Smirnov.

2017-11-25 Version 0.22: Unification
Added support for long <-- and --> arrows in body text.
Added support for ordered lists that begin with numbers other than 1.
Markdeep now strips HTML comments that are not in code blocks at the beginning of processing.
Added Japanese localization by Takashi Masuyama.
Added optional CSS classes to fenced code blocks.
Added multiple unioned code blocks for use in highlighting and multi-language examples.
Fixed CSS to not leak outside Markdeep blocks when in html embedding mode.
Added support for LaTeX when in doxygen and html embedding modes.
Added admonitions (callout notes for the reader).
Added apidoc.css stylesheet and corresponding template by Aras Pranckeviƒçius.

2017-10-03 Version 0.21: Robustness
Upgraded to highlight.js 9.12.0, included shell session highlighting.
Fixed excess whitespace due to <p> tags being generated near section headers.
Capitalized "Contents" in English.
Made title and list pattern detection more robust.
Improved parsing of image grids when near other individual images.
Made all images hyperlink to their full-resolution versions.
Improved wide character support for diagrams contributed by Torsten Grust.
Changed implicit URL parsing to consider a trailing period as punctuation instead of part of the URL. Use explicit URL syntax of <http://...> to force it to be part of the URL.
Added an explicit CSS class for tocNumber to support hiding them.
Added support for nested blockquotes.
Fixed indented lists immediately after a header.

2017-06-30 Version 0.20: Customization
Updated Mathjax for files included via (insert) to use cloudflare.
Fixed events from other JavaScript libraries interfering with Markdeep.
Updated wkhtmltopdf instructions to work around bugs in their 0.12.4 version.
Avoided generating empty <a> tags to work around a longstanding wkhtmltopdf bug.
Improved colors for tables in the dark template.
Added Swedish localization by Nils Nilsson.
Added captionAbove option for figures, listings, and tables.

2017-05-27 Version 0.19: Layout
Adjusted the generation of paragraph tags around lists to better support HTML post-processing.
Fixed recursive (insert X here) statements triggering multiple tables of contents.
Renamed showURLs to showLabels and made it display both labels and URLs.
Added localization for the Contents text in the table of contents.
Switched to cloudflare CDN for Mathjax.
Fixed table layout in the presence of an empty first or last column cell.
Added \un Latex macro for units in math.
Added slide template (thanks to Torsten Grust).
Allowed leading space before tables with outside borders.
Added support for single-column tables.
Avoided page breaks after headers.
Improved rendering of high-index Unicode characters in diagrams.
Fixed font-weight of unnumbered H2 sections.
Removed stroke borders from grayscale Unicode blocks in diagrams.
Support for \pagebreak, \newpage, and page breaks with ++++++++.
Made the dark.css style sheet print with a white background.

2017-03-31 Version 0.18: Lists and links
Improved detection of the end of lists followed by indented content
Improved handling of multiple lists within a single schedule list day
Removed console debug output that was accidentally enabled in version 0.17
Defaulted to including the markdeep.min.js script with a trailing ?, to force updates under new aggressive browser caching
Support for subfigures in references, e.g., Figure [dinosaur](a)
Support for quoted URLs (needed for URLs containing unescaped parentheses)
Allowed fenced code blocks to be indented
Added support for both single and double arrows
Fixed incorrect floating on diagrams that lack a right border
Fixed citations at the end of figure captions

2017-02-12 Version 0.17: Style
Diagrams that are not floating may now omit the right-edge markers
Workarounds for Wordpress compatibility
Workaround for Firefox-specific bug with canvas in iframe affecting include statements
Allowed listing captions to be up to four lines long
Improved robustness of underscores and italics within words
Added Polish translation by Dariusz Ku≈õnierek
Added Latex and Dark style sheets.
Documented paragraph numbering

2016-12-20 Version 0.16: Printing support
Removed hyperlinking of svn and perforce URLs (they are still typset as URLs)
Improved Latex single-$ parsing
Fixed lists after unnumbered sections needing too much whitespace
Made horizontal rule parsing more permissive
Made layout avoid page breaks in tables, listings, and images when printed
Experimental `insert` support
Added version number to Markdeep footer

2016-10-28 Version 0.15: Proof support
Changed windows code font to Consolas because Lucida Console's capital 'V' character is confusingly small.
Now only only floating images have constrained caption widths
Captions are always justified within the centered block
Added showURLs option
Added German and Hungarian localization contributed by Berczi S√°ndor
"Contents"/"Table of Contents" header is now localized
Added console warnings for broken reference links
Added console warnings for unused reference links
Added console warnings for unreferenced figures, tables, etc.
Added console warnings for broken links to figures, tables, etc.

2016-09-10 Version 0.14: Robustness
Switched double minus signs to parse as em dash instead of en dash, since they visually resemble em dash in the text.
Corrected parsing of lists with spaces between the elements.
Grids of images are recognized and preserved.
Made table of contents work for documents with incorrect header nesting
Fixed an obscure browser-lockup bug resulting from parsing protected substrings as numbers for later markdown
Fixed protect accidentally generating sequences that look like dimensions.
Fixed links and images within footnotes and bibliography entries.`
Increased character count for "short" definition lists to 160 characters.

2016-08-01 Version 0.13: Book support
Added support for youtu.be URL shortened videos
Documented lang advanced option
Exposed tocStyle advanced option
Added support for multiple entries per date in schedule lists
Added support for auto-hiding weekends in schedule lists
Switched all date computations to UTC to avoid daylight time problems
Added parenthesized entries for schedule lists
Added support for arbitrary attributes on regular links
Terse formatting for definition lists with short definitions
Fixed fancy quotes in non-unicode documents
Reduced file size slightly
Improved syntax auto-highlighting in code blocks

2016-06-28 Version 0.12: Localization
Prevented double underscores in variable names inside of diagrams, e.g., __FILE__, from being parsed as lines
Prevented decoration characters from being stripped from diagrams when on false-diagonal lines composed entirely of decorations
Matched fixed-width fonts between diagrams and code blocks, and code block font sizes across platforms
Added localization support via markdeepOptions.lang and <meta lang="..." ...>
Increased robustness of section links
Added unnumbered sections using (#)

2016-05-14 Version 0.11: Integration
Added ?export option to extract raw HTML
Switched to font-rendering: antialiased; for lighter fonts
Added support for numeric exponents outside of math mode
Made spaces in figure/listing/table references unbreakable
Fixed processing of max-width and width on images
Added default max-width of 100% on images (can be overriden per image)
Extended minus-sign beautification to negative numbers immediately following an open parenthesis
Tweaked code syntax highlighting
Updated to use highlight.js 0.9.3
Fixed smart quotes after numbers
Made fancy quotes fully CSS-stylable
Made diagrams CSS-stylable
Protected style tags
Protected table of contents link names
Fixed long table of contents link to first section
Added gravizo support
Added figure captions

2016-03-22 Version 0.10: Calendars and Images
Fixed alignment in table cells
Added support for links with no text
Added starter.md.html to web page
Switched default raw URL font to Georgia for more weight and better slashes
Table of contents now becomes its own section if it is longer than the abstract
Added support for Latex equation, eqnarray, and equation* environments
Fixed current-day highlighting on calendars
Fixed multiple single-$ Latex expressions on a single line
Allowed definition list terms to begin with non-word characters
Added support for daylight saving time independent of country
Improved robustness of parsing links within image captions
Added support for floating, captioned images
Fixed centering of multiple images in separate blocks
Allowed definition lists to have a single space between the colon and definition

2016-02-02 Version 0.09: References and Internal Links
Added support for schedule lists
10x performance increase over version 0.08
Added IE11 support
Added support for calendars
Added support for HTML attributes on images
Added support for video
Added CSS classes for different list bullets
Added support for Youtube and Vimeo video
Fixed multiple centered images in a group
Fixed multiple colons in schedule event titles
Added fancy quotes
Highlighted current day on calendars

2016-01-18 Version 0.08: References and Internal Links
Prevented HTML tags in the title from appearing in the browser tab
Fixed single-character bold and italic text hanging across lines
Fixed indented bold and italic text crossing lines
Added reference-style links
Added footnotes/endnotes
Added citations
Allowed code blocks within other formatting
Code blocks can now contain diagram syntax without it becoming a diagram
Optimized performance of documents with many blocks
Updated Markdeep line hides the document until formatting succeeds or loading markdeep.js times out
Added smart quotes for double quotation marks
Fixed strict mode for Firefox
Protected raw <code> blocks from processing
Added automatic section links
Added table and listing captions
Added figure, table, and listing numbering and references
Fixed single-letter italic words in lists
Allowed lists to omit the leading blank line if the previous line ends in a colon or comma
Allowed inline code to wrap around a line
Stylized ~~~~ code blocks appropriately for listings, while leaving ```` blocks unadorned
Fixed URLs with underscores and tildes
Added robust processing of lists with inconsistent indenting
Added support for lists within definition lists
Fixed definition lists with multiple :-indented lines
Added support for multiple paragraphs in definition lists
Added support for multiple paragraphs in regular lists

2015-12-31 Version 0.07: Polish
Fixed white dot decorations next to lines in diagrams
Fixed floating images (broken in 0.06)
Fixed diagonal up-left arrows not reaching boxes
Added support for captionless images
Added captions below images
Added support for centered images
Fixed processing of tables with short delimiters
Fixed diagonals appearing inside curves with vertices in diagrams
Allowed points vertically and horizontally adjacent to lines and points in diagrams
Improved unicode line and box character appearance in diagrams
Allowed leading space and shorter lines for Setext-style headers
Added Unicode block character support for diagrams
Enlarged Unicode hexagons to form tighter grids
Text is now selectable in diagrams
Added tiny grid examples to features.md.html
Added dot grid examples to features.md.html
Added Unicode examples to features.md.html
Added beautification of a number followed by "degrees"
Single linebreaks now allowed in italics, bold, and strikethrough
Hid the document until formatting is complete, once it is known that the script is available
Increased spacing between section numbers and titles

2015-11-30 Version 0.06: Bug Fixes
Improved arrowheads at points
Improved arrowheads at boxes
Improved processing of words with 'o' in boxes
script tag workaround for C++ template/Java generic syntax in code examples with capitalized classes
Fixed blocks beginning at the top of the document
Allow LaTeX expressions at the end of a sentence
Relaxed whitespace rules for LaTeX expressions
Fixed URLs in subtitles
Centered diagrams by default
Switched to https by default for Markdeep and Mathjax

2015-11-10 Version 0.05: Beta
Added named anchors to all sections
Fixed $$ in code blocks
Fixed header on the first line of a document
Added table of contents generation
Adjusted link styling
Added markdeepOptions.detectMath
Fixed ==> arrows in html mode
Released implementation source code

2015-11-03 Version 0.04: Optimization
Reduced minified script size to 56k (v0.03 was 88k)
Added notes about Unicode source
En dash (--), em dash (---), and minus sign
Transform x into √ó in cases such as "1920√ó1080"
Fixed e-mail addresses in subtitles
Fixed arrows in the middle of lines not appearing
Removed borders around diagrams in the default stylesheet
Made tables centered in the default stylesheet
Added support for left floating diagrams

2015-10-21 Version 0.03: Embedding Support
Added public Javascript API
Added support for embedding isolated Markdeep diagrams and content tags in HTML
Wrapped Markdeep styles in a md class
Moved Markdeep stylesheet to the top of <head> to make it easier to override
Improved handling of underscore lines and parentheses in diagrams
Added support for short verticals in diagrams, e.g., _.- -._
Added support for hyperlinking of URLs containing ? and &
Added CSS class support for <em> and <strong> tags to allow reinterpretation of *em* vs. _em_ syntax.
Fixed single quotes and dollar signs in fenced code blocks
Adjusted default style sheet spacing for long and short documents

2015-10-18 Version 0.02: Conformance
Reduced minified script size by 1k
Fixed subheading numbering
Fixed diagram decorated points at T junctions
Added support for * and + as list bullets
Explicitly protected script and style blocks (CommonMark conformance)
No longer allow spaces between flanking bold and italic delimiter runs and enclosed words (CommonMark conformance)
Switched to <em> and <strong> tags from explicit italic and bold ones
Added support for ATX ## headers ## up to h6 (CommonMark conformance)
Allowed lists to begin immediately after headers
Remapped arrows in text from ==> and <==
Fixed a lock-up bug in highlight.js by upgrading to the latest version...increasing size by 2k (now 85k)
Added support for acute __\ corners in diagrams

2015-10-15 Version 0.01: Initial release

